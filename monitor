



class monitor ;
   int no_trans; 
  
  mailbox mon2sb ;
   Host_Request sampled_req ;
  
  virtual tb_interface tb_intf ; 
  virtual ddr_interface ddr_intf ;
  
  function new ( input mailbox  basic_mail_box, input virtual tb_interface tb_intf,input virtual ddr_interface ddr_intf) ;
    
    this.mon2sb= basic_mail_box ; 
    
    this.tb_intf= tb_intf ; 
    this.ddr_intf=ddr_intf;
    
  endfunction 
  
  
  
 
  
  
  
  
  task monitor_now ();
      forever begin 
        @(posedge tb_intf.cmd_rdy) ;
        repeat(2) @( posedge ddr_intf.CK_t) ;
        sampled_req = new() ;
      	sampled_req.address=tb_intf.Monitor.monitor_cb.log_addr ;
        sampled_req.data=tb_intf.Monitor.monitor_cb.wr_data; 
        sampled_req.req=tb_intf.Monitor.monitor_cb.request; 
        //sampled_req.CWL=tb_intf.Monitor.monitor_cb.CWL; 
       // sampled_req.CL=tb_intf.Monitor.monitor_cb.CL; 
       sampled_req.BL=tb_intf.Monitor.monitor_cb.BL; 
       // sampled_req.AL=tb_intf.Monitor.monitor_cb.AL; 
        //sampled_req.RD_PRE=tb_intf.Monitor.monitor_cb.RD_PRE;
        //sampled_req.WR_PRE=tb_intf.Monitor.monitor_cb.WR_PRE;
        
    
        if(sampled_req.address &&  sampled_req.data && sampled_req.req ) begin 
        
        mon2sb.put(sampled_req);
        no_trans++ ; 
          // $display("-----------------------------");
   // $display(" tb_intf.log_addr:%0h \ntb_intf.request:%0h\nWrite Data:%0h \n", sampled_req.address,  sampled_req.req,  sampled_req.data);
        end 
  
    end 
  endtask 
  
  
  
  
endclass 
